name: Spell Check

permissions:
  pull-requests: write  
  contents: read        

on:
  pull_request:
  push:
    branches: [dev, main]

jobs:
  spell-check:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.event_name == 'pull_request'  

    steps:
      - name: Check out the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run cspell
        uses: streetsidesoftware/cspell-action@v1
        with:
          config: './cspell.json'  
          incremental_files_only: true 
          strict: false  

      - name: Format Spell Check Results
        id: format-results
        run: |
          if [ -s cspell-reports/cspell-output.txt ]; then
            echo "## 📝 Spell Check Results:" > results.md
            echo "" >> results.md
            echo "| File | Line | Error | Suggested Fix |" >> results.md
            echo "|------|------|-------|---------------|" >> results.md
            while IFS= read -r line; do
              file=$(echo "$line" | cut -d: -f1)
              line_number=$(echo "$line" | cut -d: -f2)
              error=$(echo "$line" | cut -d: -f3 | awk '{$1=$1};1')
              suggestion=$(echo "$error" | grep -oP '\((.*?)\)' | tr -d '()')
              echo "| \`$file\` | $line_number | $error | $suggestion |" >> results.md
            done < cspell-reports/cspell-output.txt
            cat results.md
            echo "spell_check_result=$(cat results.md)" >> $GITHUB_OUTPUT
          else
            echo "spell_check_result=**🎉 No spelling errors found!**" >> $GITHUB_OUTPUT
          fi

      - name: Post Spell Check Results
        if: always()
        uses: thollander/actions-comment-pull-request@v3
        with:
          message: ${{ steps.format-results.outputs.spell_check_result }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          comment-tag: spell-check-result
          mode: upsert
          create-if-not-exists: true
